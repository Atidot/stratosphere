{
  "Name": "AutoScalingGroup",
  "Type": "AWS::AutoScaling::AutoScalingGroup",
  "Documentation": "The AWS::AutoScaling::AutoScalingGroup type creates an Auto Scaling group.\nYou can add an UpdatePolicy attribute to your Auto Scaling group to control how rolling updates are performed when a change has been made to the Auto Scaling group's launch configuration or subnet group membership.",
  "Dependencies": [
    "ResourceProperties.AutoScalingMetricsCollection",
    "ResourceProperties.AutoScalingNotificationConfigurations",
    "ResourceProperties.AutoScalingTags"
  ],
  "Parameters": [
    {
      "Name": "AvailabilityZones",
      "Type": "[Text]",
      "Documentation": "Contains a list of availability zones for the group.",
      "Required": false
    },
    {
      "Name": "Cooldown",
      "Type": "Text",
      "Documentation": "The number of seconds after a scaling activity is completed before any further scaling activities can start.",
      "Required": false
    },
    {
      "Name": "DesiredCapacity",
      "Type": "Text",
      "Documentation": "Specifies the desired capacity for the Auto Scaling group.\nIf SpotPrice is not set in the AWS::AutoScaling::LaunchConfiguration for this Auto Scaling group, then Auto Scaling will begin to bring instances online based on DesiredCapacity. CloudFormation will not mark the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) until the desired capacity is reached.\nIf SpotPrice is set, then DesiredCapacity will not be used as a criteria for success, since instances will only be started when the spot price has been matched. After the spot price has been matched, however, Auto Scaling uses DesiredCapacity as the target capacity for the group.",
      "Required": false
    },
    {
      "Name": "HealthCheckGracePeriod",
      "Type": "Integer'",
      "Documentation": "The length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.",
      "Required": false
    },
    {
      "Name": "HealthCheckType",
      "Type": "Text",
      "Documentation": "The service you want the health status from, Amazon EC2 or Elastic Load Balancer. Valid values are EC2 or ELB.",
      "Required": false
    },
    {
      "Name": "InstanceId",
      "Type": "Text",
      "Documentation": "The ID of the Amazon EC2 instance you want to use to create the Auto Scaling group. Use this property if you want to create an Auto Scaling group that uses an existing Amazon EC2 instance instead of a launch configuration.\nWhen you use an Amazon EC2 instance to create an Auto Scaling group, a new launch configuration is first created and then associated with the Auto Scaling group. The new launch configuration derives all its properties from the instance, with the exception of BlockDeviceMapping and AssociatePublicIpAddress.",
      "Required": false
    },
    {
      "Name": "LaunchConfigurationName",
      "Type": "Text",
      "Documentation": "Specifies the name of the associated AWS::AutoScaling::LaunchConfiguration.\nNote\nIf this resource has a public IP address and is also in a VPC that is defined in the same template, you must use the DependsOn attribute to declare a dependency on the VPC-gateway attachment. For more information, see DependsOn Attribute.",
      "Required": false
    },
    {
      "Name": "LoadBalancerNames",
      "Type": "[Text]",
      "Documentation": "A list of load balancers associated with this Auto Scaling group.",
      "Required": false
    },
    {
      "Name": "MaxSize",
      "Type": "Text",
      "Documentation": "The maximum size of the Auto Scaling group.",
      "Required": true
    },
    {
      "Name": "MetricsCollection",
      "Type": "[AutoScalingMetricsCollection]",
      "Documentation": "Enables the monitoring of group metrics of an Auto Scaling group.",
      "Required": false
    },
    {
      "Name": "MinSize",
      "Type": "Text",
      "Documentation": "The minimum size of the Auto Scaling group.",
      "Required": true
    },
    {
      "Name": "NotificationConfigurations",
      "Type": "[AutoScalingNotificationConfigurations]",
      "Documentation": "An embedded property that configures an Auto Scaling group to send notifications when specified events take place.",
      "Required": false
    },
    {
      "Name": "PlacementGroup",
      "Type": "Text",
      "Documentation": "The name of an existing cluster placement group into which you want to launch your instances. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group.",
      "Required": false
    },
    {
      "Name": "Tags",
      "Type": "[AutoScalingTags]",
      "Documentation": "The tags you want to attach to this resource.\nFor more information about tags, go to Tagging Auto Scaling Groups and Amazon EC2 Instances in the Auto Scaling User Guide.",
      "Required": false
    },
    {
      "Name": "TerminationPolicies",
      "Type": "[Text]",
      "Documentation": "A policy or a list of policies that are used to select the instances to terminate. The policies are executed in the order that you list them.\nFor more information on configuring a termination policy for your Auto Scaling group, see Instance Termination Policy for Your Auto Scaling Group in the Auto Scaling User Guide.",
      "Required": false
    },
    {
      "Name": "VPCZoneIdentifier",
      "Type": "[Text]",
      "Documentation": "A list of subnet identifiers of Amazon Virtual Private Cloud (Amazon VPCs).\nIf you specify the AvailabilityZones property, the subnets that you specify for this property must reside in those Availability Zones.\nFor more information, go to Using EC2 Dedicated Instances Within Your VPC in the Auto Scaling User Guide.",
      "Required": false
    }
  ]
}
