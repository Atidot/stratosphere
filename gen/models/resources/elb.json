{
  "Name": "LoadBalancer",
  "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
  "Documentation": "The AWS::ElasticLoadBalancing::LoadBalancer type creates a LoadBalancer.",
  "Dependencies": [
    "ResourceProperties.AccessLoggingPolicy",
    "ResourceProperties.AppCookieStickinessPolicy",
    "ResourceProperties.ConnectionDrainingPolicy",
    "ResourceProperties.ConnectionSettings",
    "ResourceProperties.HealthCheck",
    "ResourceProperties.LBCookieStickinessPolicy",
    "ResourceProperties.ListenerProperty",
    "ResourceProperties.ELBPolicy",
    "ResourceProperties.ResourceTag"
  ],
  "Parameters": [
    {
      "Name": "AccessLoggingPolicy",
      "Type": "AccessLoggingPolicy",
      "Documentation": "Captures detailed information for all requests made to your load balancer, such as the time a request was received, client\u2019s IP address, latencies, request path, and server responses.",
      "Required": false
    },
    {
      "Name": "AppCookieStickinessPolicy",
      "Type": "[AppCookieStickinessPolicy]",
      "Documentation": "Generates one or more stickiness policies with sticky session lifetimes that follow that of an application-generated cookie. These policies can be associated only with HTTP/HTTPS listeners.",
      "Required": false
    },
    {
      "Name": "AvailabilityZones",
      "Type": "[Text]",
      "Documentation": "The Availability Zones in which to create the load balancer. You can specify the AvailabilityZones or Subnets property, but not both.\nNote\nFor load balancers that are in a VPC, specify the Subnets property.",
      "Required": false
    },
    {
      "Name": "ConnectionDrainingPolicy",
      "Type": "ConnectionDrainingPolicy",
      "Documentation": "Whether deregistered or unhealthy instances can complete all in-flight requests.",
      "Required": false
    },
    {
      "Name": "ConnectionSettings",
      "Type": "ConnectionSettings",
      "Documentation": "Specifies how long front-end and back-end connections of your load balancer can remain idle.",
      "Required": false
    },
    {
      "Name": "CrossZone",
      "Type": "Bool",
      "Documentation": "Whether cross-zone load balancing is enabled for the load balancer. With cross-zone load balancing, your load balancer nodes route traffic to the back-end instances across all Availability Zones. By default the CrossZone property is false.",
      "Required": false
    },
    {
      "Name": "HealthCheck",
      "Type": "HealthCheck",
      "Documentation": "Application health check for the instances.",
      "Required": false
    },
    {
      "Name": "Instances",
      "Type": "[Text]",
      "Documentation": "A list of EC2 instance IDs for the load balancer.",
      "Required": false
    },
    {
      "Name": "LBCookieStickinessPolicy",
      "Type": "[LBCookieStickinessPolicy]",
      "Documentation": "Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent), or by a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.",
      "Required": false
    },
    {
      "Name": "LoadBalancerName",
      "Type": "Text",
      "Documentation": "A name for the load balancer. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the load balancer. The name must be unique within your set of load balancers. For more information, see Name Type.\nImportant\nIf you specify a name, you cannot do updates that require this resource to be replaced. You can still do updates that require no or some interruption. If you must replace the resource, specify a new name.",
      "Required": false
    },
    {
      "Name": "Listeners",
      "Type": "[ListenerProperty]",
      "Documentation": "One or more listeners for this load balancer. Each listener must be registered for a specific port, and you cannot have more than one listener for a given port.\nImportant\nIf you update the property values for a listener specified by the Listeners property, AWS CloudFormation will delete the existing listener and create a new one with the updated properties. During the time that AWS CloudFormation is performing this action, clients will not be able to connect to the load balancer.",
      "Required": true
    },
    {
      "Name": "Policies",
      "Type": "[ELBPolicy]",
      "Documentation": "A list of elastic load balancing policies to apply to this elastic load balancer.",
      "Required": false
    },
    {
      "Name": "Scheme",
      "Type": "Text",
      "Documentation": "For load balancers attached to an Amazon VPC, this parameter can be used to specify the type of load balancer to use. Specify internal to create an internal load balancer with a DNS name that resolves to private IP addresses or internet-facing to create a load balancer with a publicly resolvable DNS name, which resolves to public IP addresses.\n\nNote\nIf you specify internal, you must specify subnets to associate with the load balancer, not Availability Zones.\n",
      "Required": false
    },
    {
      "Name": "SecurityGroups",
      "Type": "[Text]",
      "Documentation": "",
      "Required": false
    },
    {
      "Name": "Subnets",
      "Type": "[Text]",
      "Documentation": "A list of subnet IDs in your virtual private cloud (VPC) to attach to your load balancer. Do not specify multiple subnets that are in the same Availability Zone. You can specify the AvailabilityZones or Subnets property, but not both.\nFor more information about using Elastic Load Balancing in a VPC, see How Do I Use Elastic Load Balancing in Amazon VPC in the Elastic Load Balancing Developer Guide.",
      "Required": false
    },
    {
      "Name": "Tags",
      "Type": "[ResourceTag]",
      "Documentation": "An arbitrary set of tags (key-value pairs) for this load balancer.",
      "Required": false
    }
  ]
}
