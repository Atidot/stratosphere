{
  "Name": "Stack",
  "Type": "AWS::CloudFormation::Stack",
  "Documentation": "The AWS::CloudFormation::Stack type nests a stack as a resource in a top-level template.\nYou can add output values from a nested stack within the containing template. You use the GetAtt function with the nested stack's logical name and the name of the output value in the nested stack in the format Outputs.NestedStackOutputName.\nWhen you apply template changes to update a top-level stack, AWS CloudFormation updates the top-level stack and initiates an update to its nested stacks. AWS CloudFormation updates the resources of modified nested stacks, but does not update the resources of unmodified nested stacks. For more information, see AWS CloudFormation Stacks Updates.",
  "Dependencies": [
    "ResourceProperties.ResourceTag",
    "Parameters"
  ],
  "Parameters": [
    {
      "Name": "NotificationARNs",
      "Type": "[Text]",
      "Documentation": "A list of existing Amazon SNS topics where notifications about stack events are sent.",
      "Required": false
    },
    {
      "Name": "Parameters",
      "Type": "ParameterMap",
      "Documentation": "The set of parameters passed to AWS CloudFormation when this nested stack is created.\nNote\nIf you use the ref function to pass a parameter value to a nested stack, comma-delimited list parameters must be of type String. In other words, you cannot pass values that are of type CommaDelimitedList to nested stacks.",
      "Required": false
    },
    {
      "Name": "ResourceTags",
      "Type": "[ResourceTag]",
      "Documentation": "An arbitrary set of tags (key\u2013value pairs) to describe this stack.",
      "Required": false
    },
    {
      "Name": "TemplateURL",
      "Type": "Text",
      "Documentation": "The URL of a template that specifies the stack that you want to create as a resource. The template must be stored on an Amazon S3 bucket, so the URL must have the form: https://s3.amazonaws.com/.../TemplateName.template",
      "Required": true
    },
    {
      "Name": "TimeoutInMinutes",
      "Type": "Text",
      "Documentation": "The length of time, in minutes, that AWS CloudFormation waits for the nested stack to reach the CREATE_COMPLETE state. The default is no timeout. When AWS CloudFormation detects that the nested stack has reached the CREATE_COMPLETE state, it marks the nested stack resource as CREATE_COMPLETE in the parent stack and resumes creating the parent stack. If the timeout period expires before the nested stack reaches CREATE_COMPLETE, AWS CloudFormation marks the nested stack as failed and rolls back both the nested stack and parent stack.",
      "Required": false
    }
  ]
}
